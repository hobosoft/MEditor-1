<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:c="http://www.springframework.org/schema/c"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="keycloakAuthenticationProvider"/>
	</security:authentication-manager>

	<bean id="adapterDeploymentContext"
		  class="org.keycloak.adapters.springsecurity.AdapterDeploymentContextFactoryBean"
		  c:keycloakConfigFileResource="/WEB-INF/keycloak.json" />

	<bean id="keycloakLogoutHandler"
		  class="org.keycloak.adapters.springsecurity.authentication.KeycloakLogoutHandler"
	      c:adapterDeploymentContext-ref="adapterDeploymentContext" />


	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg name="logoutSuccessUrl" value="/" />
		<constructor-arg name="handlers">
			<list>
				<ref bean="keycloakLogoutHandler" />
				<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
		<property name="logoutRequestMatcher">
			<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher"
				  c:pattern="/sso/logout**" c:httpMethod="GET" />
		</property>
	</bean>

	<bean id="keycloakAuthenticationEntryPoint"
		  class="org.keycloak.adapters.springsecurity.authentication.KeycloakAuthenticationEntryPoint"
		  c:adapterDeploymentContext-ref="adapterDeploymentContext"	/>

	<bean id="keycloakAuthenticationProvider"
		  class="org.keycloak.adapters.springsecurity.authentication.KeycloakAuthenticationProvider" />

	<bean id="keycloakPreAuthActionsFilter"
		  class="org.keycloak.adapters.springsecurity.filter.KeycloakPreAuthActionsFilter" />

	<bean id="keycloakAuthenticationProcessingFilter"
		  class="org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticationProcessingFilter"
		  c:authenticationManager-ref="authenticationManager" />


	<!-- filters chain -->
	<security:http auto-config="false" entry-point-ref="keycloakAuthenticationEntryPoint">
		<security:custom-filter ref="keycloakPreAuthActionsFilter" before="LOGOUT_FILTER" />
		<security:custom-filter ref="keycloakAuthenticationProcessingFilter" before="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/**" access="hasRole('ROLE_MEDITOR')" />
		<security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER" />
		<!--comment out when using superDevMode-->
		<security:intercept-url pattern="/**" requires-channel="#{ systemEnvironment['superdev'] != null ? 'any' : 'https' }" />

		<!-- coz iframe with pdf.js -->
		<security:headers>
			<security:frame-options disabled="true" />
		</security:headers>

		<!-- As of Spring Security 4.0 CSRF is enabled by default, temporarily disabled -->
		<security:csrf disabled="true" />
	</security:http>

</beans>
